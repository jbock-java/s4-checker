import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'application'
}

private static def javafxVersion() {
    return '21';
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.openjfx', name: 'javafx-base', version: javafxVersion(), classifier: osClassifier()
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javafxVersion(), classifier: osClassifier()
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javafxVersion(), classifier: osClassifier()
    implementation('io.github.jbock-java:parmigiano:1.02')
    implementation('io.github.jbock-java:jbock:5.14')
    annotationProcessor('io.github.jbock-java:jbock-compiler:5.14')
    testImplementation('org.apache.commons:commons-math3:3.6.1')
    testImplementation('org.mockito:mockito-core:4.10.0')
    testImplementation('org.junit.jupiter:junit-jupiter:5.9.1')
}

application {
    mainClass = 'uppu.S4Checker'
    mainModule = 'uppufx'
}

configurations {
    testCompile
}

test {
    useJUnitPlatform()
    testLogging {
        events('failed')
    }
}

private static def osClassifier() {
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        return 'win'
    }
    if (Os.isFamily(Os.FAMILY_MAC)) {
        return 'mac'
    }
    if (Os.isFamily(Os.FAMILY_UNIX)) {
        return 'linux'
    }
    throw new IllegalStateException('unknown OS');
}
